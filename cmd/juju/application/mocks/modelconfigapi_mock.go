// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/application (interfaces: ModelConfigClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockModelConfigClient is a mock of ModelConfigClient interface.
type MockModelConfigClient struct {
	ctrl     *gomock.Controller
	recorder *MockModelConfigClientMockRecorder
}

// MockModelConfigClientMockRecorder is the mock recorder for MockModelConfigClient.
type MockModelConfigClientMockRecorder struct {
	mock *MockModelConfigClient
}

// NewMockModelConfigClient creates a new mock instance.
func NewMockModelConfigClient(ctrl *gomock.Controller) *MockModelConfigClient {
	mock := &MockModelConfigClient{ctrl: ctrl}
	mock.recorder = &MockModelConfigClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModelConfigClient) EXPECT() *MockModelConfigClientMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockModelConfigClient) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockModelConfigClientMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockModelConfigClient)(nil).Close))
}

// ModelGet mocks base method.
func (m *MockModelConfigClient) ModelGet() (map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModelGet")
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModelGet indicates an expected call of ModelGet.
func (mr *MockModelConfigClientMockRecorder) ModelGet() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModelGet", reflect.TypeOf((*MockModelConfigClient)(nil).ModelGet))
}
