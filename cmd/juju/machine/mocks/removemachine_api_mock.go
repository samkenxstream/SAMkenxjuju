// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/cmd/juju/machine (interfaces: RemoveMachineAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	params "github.com/juju/juju/rpc/params"
)

// MockRemoveMachineAPI is a mock of RemoveMachineAPI interface.
type MockRemoveMachineAPI struct {
	ctrl     *gomock.Controller
	recorder *MockRemoveMachineAPIMockRecorder
}

// MockRemoveMachineAPIMockRecorder is the mock recorder for MockRemoveMachineAPI.
type MockRemoveMachineAPIMockRecorder struct {
	mock *MockRemoveMachineAPI
}

// NewMockRemoveMachineAPI creates a new mock instance.
func NewMockRemoveMachineAPI(ctrl *gomock.Controller) *MockRemoveMachineAPI {
	mock := &MockRemoveMachineAPI{ctrl: ctrl}
	mock.recorder = &MockRemoveMachineAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRemoveMachineAPI) EXPECT() *MockRemoveMachineAPIMockRecorder {
	return m.recorder
}

// BestAPIVersion mocks base method.
func (m *MockRemoveMachineAPI) BestAPIVersion() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BestAPIVersion")
	ret0, _ := ret[0].(int)
	return ret0
}

// BestAPIVersion indicates an expected call of BestAPIVersion.
func (mr *MockRemoveMachineAPIMockRecorder) BestAPIVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BestAPIVersion", reflect.TypeOf((*MockRemoveMachineAPI)(nil).BestAPIVersion))
}

// Close mocks base method.
func (m *MockRemoveMachineAPI) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockRemoveMachineAPIMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockRemoveMachineAPI)(nil).Close))
}

// DestroyMachinesWithParams mocks base method.
func (m *MockRemoveMachineAPI) DestroyMachinesWithParams(arg0, arg1, arg2 bool, arg3 *time.Duration, arg4 ...string) ([]params.DestroyMachineResult, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2, arg3}
	for _, a := range arg4 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DestroyMachinesWithParams", varargs...)
	ret0, _ := ret[0].([]params.DestroyMachineResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DestroyMachinesWithParams indicates an expected call of DestroyMachinesWithParams.
func (mr *MockRemoveMachineAPIMockRecorder) DestroyMachinesWithParams(arg0, arg1, arg2, arg3 interface{}, arg4 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2, arg3}, arg4...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyMachinesWithParams", reflect.TypeOf((*MockRemoveMachineAPI)(nil).DestroyMachinesWithParams), varargs...)
}
