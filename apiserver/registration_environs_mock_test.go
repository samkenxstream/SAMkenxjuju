// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/environs (interfaces: ConnectorInfo)

// Package apiserver_test is a generated GoMock package.
package apiserver_test

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	proxy "github.com/juju/juju/proxy"
)

// MockConnectorInfo is a mock of ConnectorInfo interface.
type MockConnectorInfo struct {
	ctrl     *gomock.Controller
	recorder *MockConnectorInfoMockRecorder
}

// MockConnectorInfoMockRecorder is the mock recorder for MockConnectorInfo.
type MockConnectorInfoMockRecorder struct {
	mock *MockConnectorInfo
}

// NewMockConnectorInfo creates a new mock instance.
func NewMockConnectorInfo(ctrl *gomock.Controller) *MockConnectorInfo {
	mock := &MockConnectorInfo{ctrl: ctrl}
	mock.recorder = &MockConnectorInfoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnectorInfo) EXPECT() *MockConnectorInfoMockRecorder {
	return m.recorder
}

// ConnectionProxyInfo mocks base method.
func (m *MockConnectorInfo) ConnectionProxyInfo() (proxy.Proxier, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConnectionProxyInfo")
	ret0, _ := ret[0].(proxy.Proxier)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConnectionProxyInfo indicates an expected call of ConnectionProxyInfo.
func (mr *MockConnectorInfoMockRecorder) ConnectionProxyInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConnectionProxyInfo", reflect.TypeOf((*MockConnectorInfo)(nil).ConnectionProxyInfo))
}
