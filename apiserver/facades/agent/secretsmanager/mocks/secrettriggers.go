// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/apiserver/facades/agent/secretsmanager (interfaces: SecretTriggers)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	secrets "github.com/juju/juju/core/secrets"
	state "github.com/juju/juju/state"
	names "github.com/juju/names/v4"
)

// MockSecretTriggers is a mock of SecretTriggers interface.
type MockSecretTriggers struct {
	ctrl     *gomock.Controller
	recorder *MockSecretTriggersMockRecorder
}

// MockSecretTriggersMockRecorder is the mock recorder for MockSecretTriggers.
type MockSecretTriggersMockRecorder struct {
	mock *MockSecretTriggers
}

// NewMockSecretTriggers creates a new mock instance.
func NewMockSecretTriggers(ctrl *gomock.Controller) *MockSecretTriggers {
	mock := &MockSecretTriggers{ctrl: ctrl}
	mock.recorder = &MockSecretTriggersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretTriggers) EXPECT() *MockSecretTriggersMockRecorder {
	return m.recorder
}

// SecretRotated mocks base method.
func (m *MockSecretTriggers) SecretRotated(arg0 *secrets.URI, arg1 time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SecretRotated", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SecretRotated indicates an expected call of SecretRotated.
func (mr *MockSecretTriggersMockRecorder) SecretRotated(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretRotated", reflect.TypeOf((*MockSecretTriggers)(nil).SecretRotated), arg0, arg1)
}

// WatchSecretRevisionsExpiryChanges mocks base method.
func (m *MockSecretTriggers) WatchSecretRevisionsExpiryChanges(arg0 []names.Tag) (state.SecretsTriggerWatcher, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchSecretRevisionsExpiryChanges", arg0)
	ret0, _ := ret[0].(state.SecretsTriggerWatcher)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WatchSecretRevisionsExpiryChanges indicates an expected call of WatchSecretRevisionsExpiryChanges.
func (mr *MockSecretTriggersMockRecorder) WatchSecretRevisionsExpiryChanges(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchSecretRevisionsExpiryChanges", reflect.TypeOf((*MockSecretTriggers)(nil).WatchSecretRevisionsExpiryChanges), arg0)
}

// WatchSecretsRotationChanges mocks base method.
func (m *MockSecretTriggers) WatchSecretsRotationChanges(arg0 []names.Tag) (state.SecretsTriggerWatcher, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchSecretsRotationChanges", arg0)
	ret0, _ := ret[0].(state.SecretsTriggerWatcher)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WatchSecretsRotationChanges indicates an expected call of WatchSecretsRotationChanges.
func (mr *MockSecretTriggersMockRecorder) WatchSecretsRotationChanges(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchSecretsRotationChanges", reflect.TypeOf((*MockSecretTriggers)(nil).WatchSecretsRotationChanges), arg0)
}
