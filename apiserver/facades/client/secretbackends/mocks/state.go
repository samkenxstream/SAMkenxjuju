// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/apiserver/facades/client/secretbackends (interfaces: StatePool)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "github.com/juju/juju/apiserver/common"
)

// MockStatePool is a mock of StatePool interface.
type MockStatePool struct {
	ctrl     *gomock.Controller
	recorder *MockStatePoolMockRecorder
}

// MockStatePoolMockRecorder is the mock recorder for MockStatePool.
type MockStatePoolMockRecorder struct {
	mock *MockStatePool
}

// NewMockStatePool creates a new mock instance.
func NewMockStatePool(ctrl *gomock.Controller) *MockStatePool {
	mock := &MockStatePool{ctrl: ctrl}
	mock.recorder = &MockStatePoolMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatePool) EXPECT() *MockStatePoolMockRecorder {
	return m.recorder
}

// GetModel mocks base method.
func (m *MockStatePool) GetModel(arg0 string) (common.Model, func() bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetModel", arg0)
	ret0, _ := ret[0].(common.Model)
	ret1, _ := ret[1].(func() bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetModel indicates an expected call of GetModel.
func (mr *MockStatePoolMockRecorder) GetModel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModel", reflect.TypeOf((*MockStatePool)(nil).GetModel), arg0)
}
