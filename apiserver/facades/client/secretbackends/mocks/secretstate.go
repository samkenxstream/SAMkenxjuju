// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/apiserver/facades/client/secretbackends (interfaces: SecretsState)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	set "github.com/juju/collections/set"
)

// MockSecretsState is a mock of SecretsState interface.
type MockSecretsState struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsStateMockRecorder
}

// MockSecretsStateMockRecorder is the mock recorder for MockSecretsState.
type MockSecretsStateMockRecorder struct {
	mock *MockSecretsState
}

// NewMockSecretsState creates a new mock instance.
func NewMockSecretsState(ctrl *gomock.Controller) *MockSecretsState {
	mock := &MockSecretsState{ctrl: ctrl}
	mock.recorder = &MockSecretsStateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretsState) EXPECT() *MockSecretsStateMockRecorder {
	return m.recorder
}

// ListModelSecrets mocks base method.
func (m *MockSecretsState) ListModelSecrets(arg0 bool) (map[string]set.Strings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListModelSecrets", arg0)
	ret0, _ := ret[0].(map[string]set.Strings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListModelSecrets indicates an expected call of ListModelSecrets.
func (mr *MockSecretsStateMockRecorder) ListModelSecrets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListModelSecrets", reflect.TypeOf((*MockSecretsState)(nil).ListModelSecrets), arg0)
}
